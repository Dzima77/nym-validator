version: '3'

services:
  node0:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: node0
    image: "nym/nym-tendermint-node"
    ports:
      - "26656-26657:26656-26657"
    environment:
      - ID=0
# Is this still applicable?
      - LOG=$${LOG:-tendermint.log}
    command: "run"
    volumes:
      - ./build/nodes/node0:/tendermint:Z
    networks:
      localnet:
        ipv4_address: 192.167.10.2

  node1:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: node1
    image: "nym/nym-tendermint-node"
    ports:
      - "26658-26659:26656-26657"
    environment:
      - ID=1
# Is this still applicable?
      - LOG=$${LOG:-tendermint.log}
    command: "run"
    volumes:
      - ./build/nodes/node1:/tendermint:Z
    networks:
      localnet:
        ipv4_address: 192.167.10.3

  node2:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: node2
    image: "nym/nym-tendermint-node"
    environment:
      - ID=2
# Is this still applicable?
      - LOG=$${LOG:-tendermint.log}
    command: "run"
    ports:
      - "26660-26661:26656-26657"
    volumes:
      - ./build/nodes/node2:/tendermint:Z
    networks:
      localnet:
        ipv4_address: 192.167.10.4

  node3:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: node3
    image: "nym/nym-tendermint-node"
    environment:
      - ID=3
# Is this still applicable?
      - LOG=$${LOG:-tendermint.log}
    command: "run"
    ports:
      - "26662-26663:26656-26657"
    volumes:
      - ./build/nodes/node3:/tendermint:Z
    networks:
      localnet:
        ipv4_address: 192.167.10.5

  validator1:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: validator1
    image: "nym/nym-validator"
    ports:
      - "4000:4000"
      - "5000:5000"
    command: "run --f /validator/config.toml"
    volumes:
      - ./build/validators/validator1:/validator:Z
    depends_on:
      - node0
      - node1
      - node2
      - node3
    networks:
      localnet:
        ipv4_address: 192.167.11.1

  validator2:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: validator2
    image: "nym/nym-validator"
    ports:
      - "4001:4000"
      - "5001:5000"
    command: "run --f /validator/config.toml"
    volumes:
      - ./build/validators/validator2:/validator:Z
    depends_on:
      - node0
      - node1
      - node2
      - node3
    networks:
      localnet:
        ipv4_address: 192.167.11.2

  validator3:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: validator3
    image: "nym/nym-validator"
    ports:
      - "4002:4000"
      - "5002:5000"
    command: "run --f /validator/config.toml"
    volumes:
      - ./build/validators/validator3:/validator:Z
    depends_on:
      - node0
      - node1
      - node2
      - node3
    networks:
      localnet:
        ipv4_address: 192.167.11.3

  watcher1:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: watcher1
    image: "nym/nym-ethereum-watcher"
    volumes:
      - ./build/ethereum-watchers/watcher1:/ethereum-watcher:Z
    command: "run --f /ethereum-watcher/config.toml"
    depends_on:
      - node0
    networks:
      localnet:
        ipv4_address: 192.167.12.1 
    restart: always

  watcher2:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: watcher2
    image: "nym/nym-ethereum-watcher"
    volumes:
      - ./build/ethereum-watchers/watcher2:/ethereum-watcher:Z
    command: "run --f /ethereum-watcher/config.toml"
    depends_on:
      - node1
    networks:
      localnet:
        ipv4_address: 192.167.12.2 
    restart: always

  watcher3:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: watcher3
    image: "nym/nym-ethereum-watcher"
    volumes:
      - ./build/ethereum-watchers/watcher3:/ethereum-watcher:Z
    command: "run --f /ethereum-watcher/config.toml"
    depends_on:
      - node2
    networks:
      localnet:
        ipv4_address: 192.167.12.3
    restart: always

  watcher4:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: watcher4
    image: "nym/nym-ethereum-watcher"
    volumes:
      - ./build/ethereum-watchers/watcher4:/ethereum-watcher:Z
    command: "run --f /ethereum-watcher/config.toml"
    depends_on:
      - node3
    networks:
      localnet:
        ipv4_address: 192.167.12.4
    restart: always

  provider1:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: provider1
    image: "nym/nym-provider"
    ports:
      - "4100:4000"
      - "5100:5000"
    command: "run --f /provider/config.toml"
    volumes:
      - ./build/providers/provider1:/provider:Z
    depends_on:
      - validator1
      - validator2
      - validator3
    networks:
      localnet:
        ipv4_address: 192.167.13.1

  provider2:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: provider2
    image: "nym/nym-provider"
    ports:
      - "4101:4000"
      - "5101:5000"
    command: "run --f /provider/config.toml"
    volumes:
      - ./build/providers/provider2:/provider:Z
    depends_on:
      - validator1
      - validator2
      - validator3
    networks:
      localnet:
        ipv4_address: 192.167.13.2

  verifier1:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: verifier1
    image: "nym/nym-verifier"
    command: "run --f /verifier/config.toml"
    volumes:
      - ./build/verifiers/verifier1:/verifier:Z
    depends_on:
      - node0
      - node1
      - node2
      - node3
    networks:
      localnet:
        ipv4_address: 192.167.14.1

  verifier2:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: verifier2
    image: "nym/nym-verifier"
    command: "run --f /verifier/config.toml"
    volumes:
      - ./build/verifiers/verifier2:/verifier:Z
    depends_on:
      - node0
      - node1
      - node2
      - node3
    networks:
      localnet:
        ipv4_address: 192.167.14.2

  redeemer1:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: redeemer1
    image: "nym/nym-redeemer"
    command: "run --f /redeemer/config.toml"
    volumes:
      - ./build/redeemers/redeemer1:/redeemer:Z
    depends_on:
      - node0
      - node1
      - node2
      - node3
    networks:
      localnet:
        ipv4_address: 192.167.15.1

  redeemer2:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: redeemer2
    image: "nym/nym-redeemer"
    command: "run --f /redeemer/config.toml"
    volumes:
      - ./build/redeemers/redeemer2:/redeemer:Z
    depends_on:
      - node0
      - node1
      - node2
      - node3
    networks:
      localnet:
        ipv4_address: 192.167.15.2

  redeemer3:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: redeemer3
    image: "nym/nym-redeemer"
    command: "run --f /redeemer/config.toml"
    volumes:
      - ./build/redeemers/redeemer3:/redeemer:Z
    depends_on:
      - node0
      - node1
      - node2
      - node3
    networks:
      localnet:
        ipv4_address: 192.167.15.3

  faucet:
    # below two are for debug purposes only
    stdin_open: true
    tty: true
    container_name: faucet
    image: "nym/nym-faucet"
    ports:
      - "9000:9000"
    command: "run --f /faucet/config.toml"
    volumes:
      - ./build/faucet:/faucet:Z
    networks:
      localnet:
        ipv4_address: 192.167.16.1

networks:
  localnet:
    driver: bridge
    ipam:
      driver: default
      config:
      -
        subnet: 192.167.10.0/16