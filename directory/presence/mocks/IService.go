// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	models "github.com/nymtech/nym/validator/nym/directory/models"
	mock "github.com/stretchr/testify/mock"
)

// IService is an autogenerated mock type for the IService type
type IService struct {
	mock.Mock
}

// GetTopology provides a mock function with given fields:
func (_m *IService) GetTopology() models.Topology {
	ret := _m.Called()

	var r0 models.Topology
	if rf, ok := ret.Get(0).(func() models.Topology); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.Topology)
	}

	return r0
}

// RegisterGateway provides a mock function with given fields: info
func (_m *IService) RegisterGateway(info models.GatewayRegistrationInfo) {
	_m.Called(info)
}

// RegisterMix provides a mock function with given fields: info
func (_m *IService) RegisterMix(info models.MixRegistrationInfo) {
	_m.Called(info)
}

// SetReputation provides a mock function with given fields: id, newRep
func (_m *IService) SetReputation(id string, newRep int64) bool {
	ret := _m.Called(id, newRep)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, int64) bool); ok {
		r0 = rf(id, newRep)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// UnregisterNode provides a mock function with given fields: id
func (_m *IService) UnregisterNode(id string) bool {
	ret := _m.Called(id)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
