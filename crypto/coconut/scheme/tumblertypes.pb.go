// Code generated by protoc-gen-go. DO NOT EDIT.
// source: crypto/coconut/scheme/proto/tumblertypes.proto

package coconut

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProtoThetaTumbler struct {
	Theta                *ProtoTheta `protobuf:"bytes,1,opt,name=theta,proto3" json:"theta,omitempty"`
	Zeta                 []byte      `protobuf:"bytes,2,opt,name=zeta,proto3" json:"zeta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ProtoThetaTumbler) Reset()         { *m = ProtoThetaTumbler{} }
func (m *ProtoThetaTumbler) String() string { return proto.CompactTextString(m) }
func (*ProtoThetaTumbler) ProtoMessage()    {}
func (*ProtoThetaTumbler) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8ab20651969e128, []int{0}
}

func (m *ProtoThetaTumbler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtoThetaTumbler.Unmarshal(m, b)
}
func (m *ProtoThetaTumbler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtoThetaTumbler.Marshal(b, m, deterministic)
}
func (m *ProtoThetaTumbler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoThetaTumbler.Merge(m, src)
}
func (m *ProtoThetaTumbler) XXX_Size() int {
	return xxx_messageInfo_ProtoThetaTumbler.Size(m)
}
func (m *ProtoThetaTumbler) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoThetaTumbler.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoThetaTumbler proto.InternalMessageInfo

func (m *ProtoThetaTumbler) GetTheta() *ProtoTheta {
	if m != nil {
		return m.Theta
	}
	return nil
}

func (m *ProtoThetaTumbler) GetZeta() []byte {
	if m != nil {
		return m.Zeta
	}
	return nil
}

// encapsulates everything required by verifiers to verify credentials
type ProtoTumblerBlindVerifyMaterials struct {
	Sig                  *ProtoSignature    `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	Theta                *ProtoThetaTumbler `protobuf:"bytes,2,opt,name=theta,proto3" json:"theta,omitempty"`
	PubM                 [][]byte           `protobuf:"bytes,3,rep,name=pubM,proto3" json:"pubM,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ProtoTumblerBlindVerifyMaterials) Reset()         { *m = ProtoTumblerBlindVerifyMaterials{} }
func (m *ProtoTumblerBlindVerifyMaterials) String() string { return proto.CompactTextString(m) }
func (*ProtoTumblerBlindVerifyMaterials) ProtoMessage()    {}
func (*ProtoTumblerBlindVerifyMaterials) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8ab20651969e128, []int{1}
}

func (m *ProtoTumblerBlindVerifyMaterials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtoTumblerBlindVerifyMaterials.Unmarshal(m, b)
}
func (m *ProtoTumblerBlindVerifyMaterials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtoTumblerBlindVerifyMaterials.Marshal(b, m, deterministic)
}
func (m *ProtoTumblerBlindVerifyMaterials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoTumblerBlindVerifyMaterials.Merge(m, src)
}
func (m *ProtoTumblerBlindVerifyMaterials) XXX_Size() int {
	return xxx_messageInfo_ProtoTumblerBlindVerifyMaterials.Size(m)
}
func (m *ProtoTumblerBlindVerifyMaterials) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoTumblerBlindVerifyMaterials.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoTumblerBlindVerifyMaterials proto.InternalMessageInfo

func (m *ProtoTumblerBlindVerifyMaterials) GetSig() *ProtoSignature {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *ProtoTumblerBlindVerifyMaterials) GetTheta() *ProtoThetaTumbler {
	if m != nil {
		return m.Theta
	}
	return nil
}

func (m *ProtoTumblerBlindVerifyMaterials) GetPubM() [][]byte {
	if m != nil {
		return m.PubM
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtoThetaTumbler)(nil), "coconut.ProtoThetaTumbler")
	proto.RegisterType((*ProtoTumblerBlindVerifyMaterials)(nil), "coconut.ProtoTumblerBlindVerifyMaterials")
}

func init() {
	proto.RegisterFile("crypto/coconut/scheme/proto/tumblertypes.proto", fileDescriptor_d8ab20651969e128)
}

var fileDescriptor_d8ab20651969e128 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0xe9, 0xd6, 0x3f, 0x10, 0xbd, 0x18, 0x0f, 0x2e, 0x7b, 0x2a, 0x7b, 0x71, 0xf7, 0x60,
	0x22, 0x0a, 0xe2, 0x79, 0xef, 0x0b, 0x52, 0x17, 0x0f, 0xde, 0xd2, 0xec, 0xd8, 0x06, 0xda, 0xa6,
	0xa4, 0x13, 0x21, 0x7e, 0x0d, 0xbf, 0xb0, 0xe4, 0x8f, 0xac, 0x42, 0xd9, 0x53, 0x5e, 0x86, 0xdf,
	0xbc, 0xf7, 0x18, 0xc2, 0xa4, 0x71, 0x03, 0x6a, 0x2e, 0xb5, 0xd4, 0xbd, 0x45, 0x3e, 0xca, 0x06,
	0x3a, 0xe0, 0x83, 0xd1, 0xa8, 0x39, 0xda, 0xae, 0x6a, 0xc1, 0xa0, 0x1b, 0x60, 0x64, 0x61, 0x44,
	0xcf, 0x13, 0xb8, 0xb8, 0x3d, 0xba, 0x78, 0xd8, 0x58, 0x96, 0xe4, 0xea, 0xc5, 0x8b, 0x5d, 0x03,
	0x28, 0x76, 0xd1, 0x91, 0xae, 0xc9, 0x29, 0xfa, 0xff, 0x3c, 0x2b, 0xb2, 0xd5, 0xc5, 0xc3, 0x35,
	0x4b, 0x36, 0xec, 0x80, 0x96, 0x91, 0xa0, 0x94, 0x9c, 0x7c, 0x79, 0x72, 0x56, 0x64, 0xab, 0xcb,
	0x32, 0xe8, 0xe5, 0x77, 0x46, 0x8a, 0x48, 0x46, 0xbf, 0x4d, 0xab, 0xfa, 0xfd, 0x1b, 0x18, 0xf5,
	0xe1, 0xb6, 0x02, 0xc1, 0x28, 0xd1, 0x8e, 0x74, 0x4d, 0xf2, 0x51, 0xd5, 0x29, 0xe1, 0xe6, 0x7f,
	0xc2, 0xab, 0xaa, 0x7b, 0x81, 0xd6, 0x40, 0xe9, 0x19, 0x7a, 0xff, 0x5b, 0x67, 0x16, 0xe0, 0xc5,
	0x44, 0x9d, 0x94, 0xf4, 0xa7, 0xd5, 0x60, 0xab, 0xed, 0x3c, 0x2f, 0x72, 0xdf, 0xca, 0xeb, 0xcd,
	0xf3, 0xfb, 0x53, 0xad, 0xb0, 0xb1, 0x15, 0x93, 0xba, 0xe3, 0xbd, 0xeb, 0x10, 0x64, 0xe3, 0xdf,
	0xbb, 0x4f, 0xd1, 0xaa, 0xbd, 0x40, 0x6d, 0xf8, 0xe4, 0xd5, 0xaa, 0xb3, 0x70, 0xaa, 0xc7, 0x9f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x41, 0xf9, 0x69, 0x8e, 0x01, 0x00, 0x00,
}
